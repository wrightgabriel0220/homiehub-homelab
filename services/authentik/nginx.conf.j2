server {
    listen 80;
    listen [::]:80;

    server_name auth.{{ domain }};

    location / {
        return 301 https://auth.{{ domain }}$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot/;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name auth.{{ domain }};

    set $authentik authentik_server;
    resolver 127.0.0.11;

    include snippets/ssl.nginx.conf*;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot/;
    }

    location / {
        proxy_pass http://$authentik:9000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;

        ##############################
        # authentik-specific config
        ##############################
        # auth_request     /auth/nginx;
        # auth_request_set $auth_cookie $upstream_http_set_cookie;
        # add_header       Set-Cookie $auth_cookie;
        # proxy_pass_request_body off;
        # proxy_set_header        Content-Length "";

        # translate headers from the outposts back to the actual upstream
        # auth_request_set $authentik_username $upstream_http_x_authentik_username;
        # auth_request_set $authentik_groups $upstream_http_x_authentik_groups;
        # auth_request_set $authentik_email $upstream_http_x_authentik_email;
        # auth_request_set $authentik_name $upstream_http_x_authentik_name;
        # auth_request_set $authentik_uid $upstream_http_x_authentik_uid;

        # proxy_set_header X-authentik-username $authentik_username;
        # proxy_set_header X-authentik-groups $authentik_groups;
        # proxy_set_header X-authentik-email $authentik_email;
        # proxy_set_header X-authentik-name $authentik_name;
        # proxy_set_header X-authentik-uid $authentik_uid;
    }

    # Special location for when the /auth endpoint returns a 401,
    # redirect to the /start URL which initiates SSO
    # location /auth/nginx {
    #     internal;
    #     add_header Set-Cookie $auth_cookie;
    #     return 302 /start?rd=$request_uri;
    #     # For domain level, use the below error_page to redirect to your authentik server with the full redirect path
    #     # return 302 https://auth.{{ domain }}/start?rd=$scheme://$http_host$request_uri;
    # }
}
