services:
  nginx:
    image: nginx:latest
    restart: always
    container_name: nginx_reverse_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services/nginx/conf/generated:/etc/nginx/conf.d
      - ./services/nginx/mediafiles:/static:ro
      - ./services/nginx/staticfiles:/static:ro
      - ./utils/nginx_snippets/generated/:/etc/nginx/snippets
      - ./utils/certbot/conf/:/etc/letsencrypt
      - ./utils/certbot/www/:/var/www/certbot/
    env_file:
      - ./services/tandoor/.env
    depends_on:
      - jellyfin
    networks:
      - main
  jellyfin:
    image: jellyfin/jellyfin
    restart: "unless-stopped"
    container_name: jf_media_server
    expose:
      - "8096"
      - "1900"
      - "7359"
      - "8920"
    volumes:
      - ./services/jellyfin/config:/config:rw
      - ./services/jellyfin/cache:/cache:rw
      - ./data/media/:/media:rw
    networks:
      - main
  jellyseerr:
    image: fallenbagel/jellyseerr
    restart: "unless-stopped"
    container_name: jellyseerr_req_man
    expose:
      - "5055"
    volumes:
      - ./services/jellyseerr/config:/app/config
    networks:
      - main
    depends_on:
      - jellyfin
      - radarr
      - sonarr
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    volumes:
      - ./services/starr/radarr/config:/config
      - ./data/media/movies:/data/media/movies
    expose:
      - "7878"
    restart: unless-stopped
    networks:
      - main
    depends_on:
      - prowlarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    volumes:
      - ./services/starr/sonarr/config:/config
      - ./data/media/tv:/data/media/tv
    expose:
      - "8989"
    restart: unless-stopped
    networks:
      - main
    depends_on:
      - prowlarr
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    volumes:
      - ./services/starr/prowlarr/config:/config
    expose:
      - "9696"
    restart: unless-stopped
    networks:
      - main
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - WEBUI_PORT=8080
    volumes:
      - ./services/qbittorrent/config:/config
      - ./data/torrents:/downloads
    expose:
      - "8080"
      - "6881"
      - "6881/udp"
    restart: unless-stopped
    networks:
      - main
  organizr:
    image: organizr/organizr:latest
    container_name: organizr_dash
    volumes:
      - ./services/organizr/config:/config
    expose:
      - "80"
    restart: unless-stopped
    networks:
      - main
  portainer:
    image: portainer/portainer-ce:latest
    restart: always
    container_name: portainer-docker-ui-server
    expose:
      - "9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./services/portainer/data:/data
    networks:
      - main
  nextcloud:
    image: nextcloud/all-in-one:latest
    init: true
    restart: always
    container_name: nextcloud-aio-mastercontainer
    ports:
      - 8080:8080
    environment:
      {
        "APACHE_PORT": 11000,
        "APACHE_IP_BINDING": 0.0.0.0,
        "SKIP_DOMAIN_VALIDATION": true,
        "NEXTCLOUD_DATADIR": "/Users/gabe/homiehub-homelab/data/drive",
        "NEXTCLOUD_MOUNT": "/Users/gabe/homiehub-homelab/data",
      }
    volumes:
      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
      - /var/run/docker.sock.raw:/var/run/docker.sock:ro
    networks:
      - main
  rainmire_map_server:
    image: itzg/minecraft-server
    tty: true
    stdin_open: true
    ports:
      - "25565:25565"
    environment:
      EULA: "TRUE"
    volumes:
      - ./services/rainmire/data:/data
  tandoor_db:
    restart: always
    image: postgres:16-alpine
    container_name: tandoor_recipes_postgres_db
    volumes:
      - ./services/tandoor/postgresql:/var/lib/postgresql/data
    env_file:
      - ./services/tandoor/.env
    networks:
      - main
  tandoor_webserver:
    restart: always
    image: vabene1111/recipes
    container_name: tandoor_recipes_webserver
    expose:
      - "8080"
    env_file:
      - ./services/tandoor/.env
    volumes:
      - ./services/tandoor/staticfiles:/opt/recipes/staticfiles
      - ./services/tandoor/mediafiles:/opt/recipes/mediafiles
    depends_on:
      - tandoor_db
    networks:
      - main
  freshrss_aggregator:
    restart: unless-stopped
    image: lscr.io/linuxserver/freshrss:latest
    container_name: freshrss
    volumes:
      - ./services/freshrss/config:/config
    expose:
      - "80"
    networks:
      - main

volumes:
  nextcloud_aio_mastercontainer:
    name: nextcloud_aio_mastercontainer
networks:
  main:
